[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 99
src = ["src"]

[tool.ruff.lint]
select = [
    "E", # General syntax and code style rules
    "F", # Pyflakes rules for unused imports, undefined names
    "I", # isort rules for imports ordering
    "TYP", # Type hinting rules
    "N", # Naming conventions
    "B", # Best practice rules
    "D", # Docstring conventions
    "SIM", # Simplifications and code smell checks
    "ERA", # Eradicate rules for unused/dead code
    "C", # Complexity rules
    "W", # Warnings
    "R", # Refactoring opportunities
]
exclude = ["tests/*", "build/*", "dist/*", "*.txt"]
ignore = ["D"]

[tool.ruff.lint.pycodestyle]
max-line-length = 99

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72

[tool.codespell]
skip = [
    "pyproject.toml", "LICENSE", "*.txt",
]
ignore-words = [
  "pyproject",
  "toml",
]
write-changes = true

[tool.pytest.ini_options]
pythonpath = "src"

[tool.pylint]
disable = "C0415, W0718"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "@abstractmethod",
    "if TYPE_CHECKING:"
]
ignore_errors = true

