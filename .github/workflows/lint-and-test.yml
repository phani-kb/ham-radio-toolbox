name: Lint and Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with ruff
        run: ruff check --output-format=github

      - name: Run tests with coverage
        run: |
          COVERAGE_FILE="coverage.json"
          python -m pytest --cov-report=html --cov-report=term --cov-report=json:$COVERAGE_FILE --cov=src/hrt tests/

      - name: Check coverage threshold
        run: |
          echo "Checking coverage threshold..."
          COVERAGE_THRESHOLD=95
          COVERAGE_FILE="coverage.json"
          
          # Parse coverage.json and extract total coverage percentage
          COVERAGE=$(python -c '
          import json
          import sys
          
          try:
              # Load the coverage report
              with open("'$COVERAGE_FILE'") as f:
                  coverage_data = json.load(f)
              
              # Extract the total coverage percentage
              coverage = coverage_data["totals"]["percent_covered"]
              print(int(coverage))
          except Exception as e:
              print(f"Error processing coverage data: {e}", file=sys.stderr)
              sys.exit(1)
          ')
          
          echo "Coverage: ${COVERAGE}%"
          echo "Required threshold: ${COVERAGE_THRESHOLD}%"
          
          if [ "$COVERAGE" -lt "$COVERAGE_THRESHOLD" ]; then
            echo "::error::Test coverage is ${COVERAGE}%, which is below the threshold of ${COVERAGE_THRESHOLD}%"
            exit 1
          else
            echo "Coverage is ${COVERAGE}%, which meets the threshold of ${COVERAGE_THRESHOLD}%"
          fi
